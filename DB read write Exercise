SET NAMES utf8;
SET sql_mode = 'NO_AUTO_VALUE_ON_ZERO';

CREATE DATABASE `catalogue` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `catalogue`;

CREATE TABLE `members` (
  `id` int(100) NOT NULL AUTO_INCREMENT,
  `phone_number1` varchar(15) NOT NULL,
  `phone_number2` varchar(15) NOT NULL,
  `name` varchar(40) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `id`(id));

INSERT INTO `members` (`id`, `phone_number1`, `phone_number2`, `name`) VALUES
(1,	'2106789345',	'6984562452', 'Dimitriou Alexis'),
(2,	'2108935682',	'6945678234', 'Alexiadis Dimitris'),
(3, '2108734987',   '6943577881', 'Sotirakopoulos Manolis');















package javaapplication43;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Orestis
 */
public class JavaApplication43 {
    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost/catalogue?autoReconnect=true&useSSL=false";
    static final String USER = "root";
    static final String PASS ="afdemp";
    
    public static void main(String[] args) throws SQLException, ClassNotFoundException {
        Connection conn = null;
        Statement stmt = null;
        
        try {
            
            
            Class.forName("com.mysql.jdbc.Driver");
            System.out.println("Connecting to database...");
            conn = DriverManager.getConnection(DB_URL,USER,PASS);
            Scanner sc = new Scanner(System.in);
            System.out.println("Creating statement....");
            stmt = conn.createStatement();
            String sql1;
            sql1 = "SELECT * FROM members";
            ResultSet rs1 = stmt.executeQuery(sql1);
            
            while(rs1.next()){
                int id = rs1.getInt("id");
                String phone_number1 = rs1.getString("phone_number1");
                String phone_number2 = rs1.getString("phone_number2");
                String name = rs1.getString("Name");
                
                System.out.println("ID: "+id);
                System.out.println(", Firt Number: "+phone_number1);
                System.out.println(", Second Number: "+phone_number2);
                System.out.println(", Name : "+name);
            }
            
            
            String crt ="CREATE TABLE IF NOT EXISTS `birthday`" +
                            "(`memberid` int(100) auto_increment NOT NULL," +
                            "`birthday` date NOT NULL," +
                            "FOREIGN KEY (`memberid`) REFERENCES `members` (`id`));";
            System.out.println(crt);
            stmt = conn.createStatement();
            int rs = stmt.executeUpdate(crt);
            if (rs>0){ 
                System.out.println("Create Success");
            }
            else {
                System.out.println("Table exists");
            }
            
            stmt = conn.createStatement();
            ResultSet rs6 = stmt.executeQuery("SELECT `name` FROM members");
            while(rs6.next()){
                String name = rs6.getString("name");
                System.out.println("Type birthday for user : "+name);
                String birthday = sc.next();
                stmt = conn.createStatement();
                int rs7 = stmt.executeUpdate("INSERT INTO birthday (`birthday`) VALUES ('"+birthday+"')");
            }
        
            
            
            
            
            
            
            
            
            
            
            String inptname;
            System.out.println("Please select a name from DB.");
            inptname=sc.nextLine();
            stmt = conn.createStatement();
            ResultSet rs2 = stmt.executeQuery("SELECT `name` FROM members");
            while(rs2.next()){
            String name = rs2.getString("name");
                if (name.equals(inptname)){
                    stmt = conn.createStatement();
                    ResultSet rs3 = stmt.executeQuery("SELECT * FROM members WHERE name='"+inptname+"';");
                    while(rs3.next()){
                        int id = rs3.getInt("id");
                        String phone_number1 = rs3.getString("phone_number1");
                        String phone_number2 = rs3.getString("phone_number2");
                        name = rs3.getString("Name");
                
                        System.out.println("ID: "+id);
                        System.out.println(", Firt Number: "+phone_number1);
                        System.out.println(", Second Number: "+phone_number2);
                        System.out.println(", Name : "+name);
                        }
                }    
            }
            
            String newname;
            String newnumber;
            System.out.println("Please insert Name for new entry : ");
            newname=sc.nextLine();
            System.out.println("Please insert Phone number for new entry : ");
            newnumber=sc.nextLine();
            
            stmt = conn.createStatement();
            int rs4 = stmt.executeUpdate("INSERT INTO members (`phone_number1`,`phone_number2`,`name`) VALUES ('"+newnumber+"','"+newnumber+"','"+newname+"');");
            if (rs4==0) {
                System.out.println("Insert failed.");
            }
            
            ResultSet rs5 = stmt.executeQuery("SELECT * FROM members");
            
            while(rs5.next()){
                int id = rs5.getInt("id");
                String phone_number1 = rs5.getString("phone_number1");
                String phone_number2 = rs5.getString("phone_number2");
                String name = rs5.getString("Name");
                
                System.out.println("ID: "+id);
                System.out.println(", First Number: "+phone_number1);
                System.out.println(", Second Number: "+phone_number2);
                System.out.println(", Name : "+name);
            }
            
            
        
         
            
            
            rs1.close();
            rs2.close();
            stmt.close();
            conn.close();
        }
         catch (SQLException ex) {
            Logger.getLogger(JavaApplication43.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        finally {
            try{
                if (stmt!=null)
                    stmt.close();
            }catch(SQLException se2){}
            try{
                if(conn!=null)
                    conn.close();
            }
            catch(SQLException se){
                se.printStackTrace();
            }
        }
        
        System.out.println("Finished!");
    }
}
